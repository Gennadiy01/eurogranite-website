# PowerShell script –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —à–ª—è—Ö—ñ–≤ —É –∑–±—ñ—Ä—Ü—ñ –¥–ª—è root —Ö–æ—Å—Ç–∏–Ω–≥—É
# –ó–∞–º—ñ–Ω—é—î –≤—Å—ñ /eurogranite-website/ —à–ª—è—Ö–∏ –Ω–∞ / –¥–ª—è —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –≤ root

Write-Host "üîß Fixing paths for root hosting..." -ForegroundColor Green
Write-Host "Converting /eurogranite-website/ ‚Üí /" -ForegroundColor Yellow

$buildPath = "eurogranite-website-optimized"

# –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ HTML —Ñ–∞–π–ª–∏
$htmlFiles = Get-ChildItem -Path $buildPath -Recurse -Filter "*.html"

$totalFiles = $htmlFiles.Count
$processedFiles = 0

Write-Host "üìÅ Found $totalFiles HTML files to process" -ForegroundColor Cyan

foreach ($file in $htmlFiles) {
    $processedFiles++
    $relativePath = $file.FullName.Replace((Get-Location).Path + "\", "")

    Write-Progress -Activity "Processing files" -Status "File $processedFiles of $totalFiles" -PercentComplete (($processedFiles / $totalFiles) * 100)

    # –ß–∏—Ç–∞—î–º–æ –≤–º—ñ—Å—Ç —Ñ–∞–π–ª—É
    $content = Get-Content -Path $file.FullName -Raw -Encoding UTF8

    # –ó–∞–º—ñ–Ω—é—î–º–æ —à–ª—è—Ö–∏
    $originalContent = $content

    # 1. Favicon —Ç–∞ —Å—Ç–∞—Ç–∏—á–Ω—ñ —Ä–µ—Å—É—Ä—Å–∏
    $content = $content -replace 'href="/eurogranite-website/', 'href="/'
    $content = $content -replace 'src="/eurogranite-website/', 'src="/'

    # 2. Canonical URLs
    $content = $content -replace 'https://eg\.yalivets\.top/eurogranite-website/', 'https://eg.yalivets.top/'

    # 3. Open Graph URLs
    $content = $content -replace 'content="https://eg\.yalivets\.top/eurogranite-website/', 'content="https://eg.yalivets.top/'

    # 4. Twitter URLs
    $content = $content -replace 'twitter:url.*?eurogranite-website/', 'twitter:url" content="https://eg.yalivets.top/'

    # 5. Hreflang URLs
    $content = $content -replace 'hreflang="[^"]*" href="https://eg\.yalivets\.top/eurogranite-website/', 'hreflang="$1" href="https://eg.yalivets.top/'

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –±—É–ª–∏ –∑–º—ñ–Ω–∏
    if ($content -ne $originalContent) {
        # –ó–∞–ø–∏—Å—É—î–º–æ –∑–º—ñ–Ω–µ–Ω–∏–π –≤–º—ñ—Å—Ç
        Set-Content -Path $file.FullName -Value $content -Encoding UTF8 -NoNewline
        Write-Host "‚úÖ Fixed: $relativePath" -ForegroundColor Green
    } else {
        Write-Host "‚è≠Ô∏è  Skipped: $relativePath (no changes needed)" -ForegroundColor Gray
    }
}

Write-Progress -Activity "Processing files" -Completed

Write-Host "`nüéâ Path fixing completed!" -ForegroundColor Green
Write-Host "üìä Processed $processedFiles files" -ForegroundColor Cyan
Write-Host "üöÄ Build is now ready for root hosting at https://eg.yalivets.top/" -ForegroundColor Yellow

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
Write-Host "`nüîç Verification - checking for remaining /eurogranite-website/ paths..." -ForegroundColor Cyan
$remainingPaths = Select-String -Path "$buildPath\*.html" -Pattern "/eurogranite-website/" -Recurse

if ($remainingPaths) {
    Write-Host "‚ö†Ô∏è  Found $($remainingPaths.Count) remaining paths that need manual review:" -ForegroundColor Red
    $remainingPaths | ForEach-Object { Write-Host "   $($_.Filename):$($_.LineNumber)" -ForegroundColor Red }
} else {
    Write-Host "‚úÖ No remaining /eurogranite-website/ paths found!" -ForegroundColor Green
}

Write-Host "`nüìã Next steps:" -ForegroundColor Magenta
Write-Host "1. Upload contents of '$buildPath' folder to your Hostinger root directory" -ForegroundColor White
Write-Host "2. Your site will be available at: https://eg.yalivets.top/" -ForegroundColor White
Write-Host "3. Test all language versions: /ua/, /en/, /de/, /pl/" -ForegroundColor White