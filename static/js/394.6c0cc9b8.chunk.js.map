{"version":3,"file":"static/js/394.6c0cc9b8.chunk.js","mappings":"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","sources":["stores/adminProductsStore.js","components/admin/products/ProductCard.jsx","components/admin/products/ProductsFilter.jsx","components/admin/products/ProductsList.jsx","components/admin/products/ProductEditor.jsx","pages/admin/ProductsManager.jsx","components/admin/navigation/AdminNavigation.jsx"],"sourcesContent":["import { create } from 'zustand'\r\nimport { productsData } from '../constants/productsData'\r\n\r\n// API базовий URL\r\nconst API_BASE_URL = process.env.NODE_ENV === 'production'\r\n  ? '/api'\r\n  : 'http://localhost:3001/api'\r\n\r\n// API функції\r\nconst apiClient = {\r\n  async get(endpoint) {\r\n    const response = await fetch(`${API_BASE_URL}${endpoint}`)\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`)\r\n    return response.json()\r\n  },\r\n\r\n  async post(endpoint, data) {\r\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data)\r\n    })\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`)\r\n    return response.json()\r\n  },\r\n\r\n  async put(endpoint, data) {\r\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data)\r\n    })\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`)\r\n    return response.json()\r\n  },\r\n\r\n  async delete(endpoint) {\r\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n      method: 'DELETE'\r\n    })\r\n    if (!response.ok) throw new Error(`HTTP ${response.status}`)\r\n    return response.json()\r\n  }\r\n}\r\n\r\nconst useAdminProductsStore = create((set, get) => ({\r\n  // Стан продуктів\r\n  products: [],\r\n  originalProducts: productsData.samples || [],\r\n  hasUnsavedChanges: false,\r\n  isInitialized: false,\r\n\r\n  // Стан UI\r\n  isLoading: false,\r\n  error: null,\r\n  editingProduct: null,\r\n  isEditModalOpen: false,\r\n  searchQuery: '',\r\n  selectedCategory: 'all',\r\n  sortBy: 'name',\r\n  sortOrder: 'asc',\r\n\r\n  // Фільтрація та пошук\r\n  setSearchQuery: (query) => {\r\n    set({ searchQuery: query })\r\n  },\r\n\r\n  setSelectedCategory: (category) => {\r\n    set({ selectedCategory: category })\r\n  },\r\n\r\n  setSortBy: (field) => {\r\n    const { sortBy, sortOrder } = get()\r\n    const newSortOrder = sortBy === field && sortOrder === 'asc' ? 'desc' : 'asc'\r\n    set({ sortBy: field, sortOrder: newSortOrder })\r\n  },\r\n\r\n  // Отримання відфільтрованих продуктів\r\n  getFilteredProducts: () => {\r\n    const { products, searchQuery, selectedCategory, sortBy, sortOrder } = get()\r\n\r\n    let filtered = [...products]\r\n\r\n    // Пошук\r\n    if (searchQuery) {\r\n      const query = searchQuery.toLowerCase()\r\n      filtered = filtered.filter(product =>\r\n        product.name.ua.toLowerCase().includes(query) ||\r\n        product.name.en.toLowerCase().includes(query) ||\r\n        product.id.toLowerCase().includes(query) ||\r\n        product.textureId.toLowerCase().includes(query)\r\n      )\r\n    }\r\n\r\n    // Фільтрація по категоріям\r\n    if (selectedCategory !== 'all') {\r\n      filtered = filtered.filter(product => {\r\n        switch (selectedCategory) {\r\n          case 'gabbro':\r\n            return product.textureId.includes('black')\r\n          case 'granite':\r\n            return product.textureId.includes('red-brown') || product.textureId.includes('gray')\r\n          case 'green':\r\n            return product.textureId.includes('green')\r\n          case 'labradorite':\r\n            return product.textureId.includes('labradorite')\r\n          default:\r\n            return true\r\n        }\r\n      })\r\n    }\r\n\r\n    // Сортування\r\n    filtered.sort((a, b) => {\r\n      let aValue, bValue\r\n\r\n      switch (sortBy) {\r\n        case 'name':\r\n          aValue = a.name.ua.toLowerCase()\r\n          bValue = b.name.ua.toLowerCase()\r\n          break\r\n        case 'price':\r\n          aValue = parseFloat(a.price.ua.replace(/[^\\d]/g, ''))\r\n          bValue = parseFloat(b.price.ua.replace(/[^\\d]/g, ''))\r\n          break\r\n        case 'dimensions':\r\n          aValue = a.dimensions.length * a.dimensions.width * a.dimensions.height\r\n          bValue = b.dimensions.length * b.dimensions.width * b.dimensions.height\r\n          break\r\n        case 'inStock':\r\n          aValue = a.inStock ? 1 : 0\r\n          bValue = b.inStock ? 1 : 0\r\n          break\r\n        default:\r\n          aValue = a.id\r\n          bValue = b.id\r\n      }\r\n\r\n      if (sortOrder === 'asc') {\r\n        return aValue < bValue ? -1 : aValue > bValue ? 1 : 0\r\n      } else {\r\n        return aValue > bValue ? -1 : aValue < bValue ? 1 : 0\r\n      }\r\n    })\r\n\r\n    return filtered\r\n  },\r\n\r\n  // Завантаження продуктів з сервера (завжди свіжі дані)\r\n  loadProducts: async (forceRefresh = false) => {\r\n    const { isInitialized } = get()\r\n\r\n    // Завжди завантажуємо свіжі дані або при примусовому оновленні\r\n    if (!forceRefresh && isInitialized) {\r\n      console.log('🔄 Продукти вже завантажені, пропускаємо...')\r\n      return { success: true, data: get().products }\r\n    }\r\n\r\n    set({ isLoading: true, error: null })\r\n\r\n    try {\r\n      console.log('🔄 Завантаження свіжих продуктів з API:', `${API_BASE_URL}/products`)\r\n      const response = await apiClient.get('/products')\r\n      console.log('✅ Отримано продукти:', response.data.length, 'шт')\r\n\r\n      set({\r\n        products: response.data,\r\n        isLoading: false,\r\n        hasUnsavedChanges: false,\r\n        isInitialized: true\r\n      })\r\n      return { success: true, data: response.data }\r\n    } catch (error) {\r\n      console.error('❌ Помилка API:', error.message)\r\n      console.log('🔄 Fallback до локальних даних...')\r\n\r\n      // Fallback до локальних даних при помилці\r\n      const { originalProducts } = get()\r\n      console.log('📦 Завантажено локальних продуктів:', originalProducts.length, 'шт')\r\n\r\n      set({\r\n        products: originalProducts,\r\n        error: `Помилка з'єднання з API. Використовуються локальні дані.`,\r\n        isLoading: false,\r\n        isInitialized: true\r\n      })\r\n      return { success: false, error: error.message }\r\n    }\r\n  },\r\n\r\n  // Примусове оновлення продуктів\r\n  refreshProducts: async () => {\r\n    console.log('🔄 Примусове оновлення продуктів...')\r\n    return get().loadProducts(true)\r\n  },\r\n\r\n  // CRUD операції\r\n  addProduct: async (productData) => {\r\n    set({ isLoading: true, error: null })\r\n\r\n    try {\r\n      const response = await apiClient.post('/products', productData)\r\n\r\n      const { products } = get()\r\n      const updatedProducts = [...products, response.data]\r\n\r\n      set({\r\n        products: updatedProducts,\r\n        isLoading: false,\r\n        isEditModalOpen: false,\r\n        editingProduct: null,\r\n        hasUnsavedChanges: true\r\n      })\r\n\r\n      return { success: true, product: response.data }\r\n    } catch (error) {\r\n      set({ error: error.message, isLoading: false })\r\n      return { success: false, error: error.message }\r\n    }\r\n  },\r\n\r\n  updateProduct: async (productId, updates) => {\r\n    set({ isLoading: true, error: null })\r\n\r\n    try {\r\n      const response = await apiClient.put(`/products/${productId}`, updates)\r\n\r\n      const { products } = get()\r\n      const updatedProducts = products.map(product =>\r\n        product.id === productId\r\n          ? response.data\r\n          : product\r\n      )\r\n\r\n      set({\r\n        products: updatedProducts,\r\n        isLoading: false,\r\n        isEditModalOpen: false,\r\n        editingProduct: null,\r\n        hasUnsavedChanges: true\r\n      })\r\n\r\n      return { success: true }\r\n    } catch (error) {\r\n      set({ error: error.message, isLoading: false })\r\n      return { success: false, error: error.message }\r\n    }\r\n  },\r\n\r\n  deleteProduct: async (productId) => {\r\n    set({ isLoading: true, error: null })\r\n\r\n    try {\r\n      await apiClient.delete(`/products/${productId}`)\r\n\r\n      const { products } = get()\r\n      const updatedProducts = products.filter(product => product.id !== productId)\r\n\r\n      set({\r\n        products: updatedProducts,\r\n        isLoading: false,\r\n        hasUnsavedChanges: true\r\n      })\r\n\r\n      return { success: true }\r\n    } catch (error) {\r\n      set({ error: error.message, isLoading: false })\r\n      return { success: false, error: error.message }\r\n    }\r\n  },\r\n\r\n  duplicateProduct: (productId) => {\r\n    set({ isLoading: true, error: null })\r\n\r\n    try {\r\n      const { products } = get()\r\n      const originalProduct = products.find(p => p.id === productId)\r\n\r\n      if (!originalProduct) {\r\n        throw new Error('Продукт не знайдено')\r\n      }\r\n\r\n      const duplicatedProduct = {\r\n        ...originalProduct,\r\n        id: `${originalProduct.id}-copy-${Date.now()}`,\r\n        name: {\r\n          ua: `${originalProduct.name.ua} (копія)`,\r\n          en: `${originalProduct.name.en} (copy)`,\r\n          de: `${originalProduct.name.de} (Kopie)`,\r\n          pl: `${originalProduct.name.pl} (kopia)`\r\n        }\r\n      }\r\n\r\n      const updatedProducts = [...products, duplicatedProduct]\r\n\r\n      set({\r\n        products: updatedProducts,\r\n        isLoading: false\r\n      })\r\n\r\n      return { success: true, product: duplicatedProduct }\r\n    } catch (error) {\r\n      set({ error: error.message, isLoading: false })\r\n      return { success: false, error: error.message }\r\n    }\r\n  },\r\n\r\n  // Управління модальним вікном\r\n  openEditModal: (product = null) => {\r\n    set({\r\n      editingProduct: product,\r\n      isEditModalOpen: true,\r\n      error: null\r\n    })\r\n  },\r\n\r\n  closeEditModal: () => {\r\n    set({\r\n      editingProduct: null,\r\n      isEditModalOpen: false,\r\n      error: null\r\n    })\r\n  },\r\n\r\n  // Оновлення статусу наявності\r\n  toggleProductStock: (productId) => {\r\n    const { products } = get()\r\n    const updatedProducts = products.map(product =>\r\n      product.id === productId\r\n        ? { ...product, inStock: !product.inStock }\r\n        : product\r\n    )\r\n\r\n    set({ products: updatedProducts })\r\n    return { success: true }\r\n  },\r\n\r\n  // Збереження змін\r\n  saveProducts: async () => {\r\n    set({ isLoading: true, error: null })\r\n\r\n    try {\r\n      const response = await apiClient.post('/products/save')\r\n      set({\r\n        isLoading: false,\r\n        hasUnsavedChanges: false\r\n      })\r\n      return { success: true, message: response.message }\r\n    } catch (error) {\r\n      set({ error: error.message, isLoading: false })\r\n      return { success: false, error: error.message }\r\n    }\r\n  },\r\n\r\n  // Скидання змін\r\n  resetProducts: async () => {\r\n    set({ isLoading: true, error: null })\r\n\r\n    try {\r\n      const response = await apiClient.post('/products/reset')\r\n      set({\r\n        products: response.data || get().originalProducts,\r\n        isLoading: false,\r\n        hasUnsavedChanges: false,\r\n        error: null,\r\n        editingProduct: null,\r\n        isEditModalOpen: false\r\n      })\r\n      return { success: true, message: response.message }\r\n    } catch (error) {\r\n      // Fallback до локального скидання\r\n      const { originalProducts } = get()\r\n      set({\r\n        products: [...originalProducts],\r\n        error: `Помилка скидання: ${error.message}. Скинуто до локальних даних.`,\r\n        editingProduct: null,\r\n        isEditModalOpen: false,\r\n        isLoading: false\r\n      })\r\n      return { success: false, error: error.message }\r\n    }\r\n  },\r\n\r\n  // Експорт/Імпорт даних\r\n  exportProducts: () => {\r\n    const { products } = get()\r\n    const dataStr = JSON.stringify(products, null, 2)\r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' })\r\n    const url = URL.createObjectURL(dataBlob)\r\n\r\n    const link = document.createElement('a')\r\n    link.href = url\r\n    link.download = `products-export-${new Date().toISOString().split('T')[0]}.json`\r\n    link.click()\r\n\r\n    URL.revokeObjectURL(url)\r\n  },\r\n\r\n  // Очистка помилок\r\n  clearError: () => {\r\n    set({ error: null })\r\n  },\r\n\r\n  // Отримання статистики\r\n  getProductsStats: () => {\r\n    const { products } = get()\r\n\r\n    return {\r\n      total: products.length,\r\n      inStock: products.filter(p => p.inStock).length,\r\n      outOfStock: products.filter(p => !p.inStock).length,\r\n      categories: {\r\n        gabbro: products.filter(p => p.textureId.includes('black')).length,\r\n        granite: products.filter(p =>\r\n          p.textureId.includes('red-brown') || p.textureId.includes('gray')\r\n        ).length,\r\n        green: products.filter(p => p.textureId.includes('green')).length,\r\n        labradorite: products.filter(p => p.textureId.includes('labradorite')).length\r\n      },\r\n      priceRange: {\r\n        min: Math.min(...products.map(p => parseFloat(p.price.ua.replace(/[^\\d]/g, '')))),\r\n        max: Math.max(...products.map(p => parseFloat(p.price.ua.replace(/[^\\d]/g, ''))))\r\n      }\r\n    }\r\n  }\r\n}))\r\n\r\nexport default useAdminProductsStore","import React from 'react'\r\n\r\nconst ProductCard = ({ product, onEdit, onDelete, onDuplicate, onToggleStock }) => {\r\n  const handleStockToggle = (e) => {\r\n    e.stopPropagation()\r\n    onToggleStock(product.id)\r\n  }\r\n\r\n  const handleEdit = (e) => {\r\n    e.stopPropagation()\r\n    onEdit(product)\r\n  }\r\n\r\n  const handleDelete = (e) => {\r\n    e.stopPropagation()\r\n    onDelete(product.id)\r\n  }\r\n\r\n  const handleDuplicate = (e) => {\r\n    e.stopPropagation()\r\n    onDuplicate(product.id)\r\n  }\r\n\r\n  const getTextureColor = (textureId) => {\r\n    if (textureId.includes('black')) return '#2d3748'\r\n    if (textureId.includes('green')) return '#38a169'\r\n    if (textureId.includes('red-brown')) return '#c05621'\r\n    if (textureId.includes('gray')) return '#718096'\r\n    if (textureId.includes('labradorite')) return '#4a5568'\r\n    return '#e2e8f0'\r\n  }\r\n\r\n  return (\r\n    <div className={`product-card ${!product.inStock ? 'product-card--out-of-stock' : ''}`}>\r\n      {/* Зображення продукту */}\r\n      <div className=\"product-card__image\">\r\n        {product.image ? (\r\n          <img\r\n            src={product.image}\r\n            alt={product.name.ua}\r\n            onError={(e) => {\r\n              e.target.style.display = 'none'\r\n              e.target.nextSibling.style.display = 'flex'\r\n            }}\r\n          />\r\n        ) : null}\r\n\r\n        {/* Fallback для зображень */}\r\n        <div\r\n          className=\"product-card__image-fallback\"\r\n          style={{\r\n            backgroundColor: getTextureColor(product.textureId),\r\n            display: product.image ? 'none' : 'flex'\r\n          }}\r\n        >\r\n          <span>🏗️</span>\r\n        </div>\r\n\r\n        {/* Статус наявності */}\r\n        <div className={`product-card__stock-badge ${product.inStock ? 'in-stock' : 'out-of-stock'}`}>\r\n          {product.inStock ? '✅ В наявності' : '❌ Немає'}\r\n        </div>\r\n\r\n        {/* Тип текстури */}\r\n        <div className=\"product-card__texture-badge\">\r\n          {product.textureId}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Інформація про продукт */}\r\n      <div className=\"product-card__content\">\r\n        <div className=\"product-card__header\">\r\n          <h3 className=\"product-card__title\" title={product.name.ua}>\r\n            {product.name.ua}\r\n          </h3>\r\n          <span className=\"product-card__id\">#{product.id.split('-').pop()}</span>\r\n        </div>\r\n\r\n        <div className=\"product-card__details\">\r\n          <div className=\"product-detail\">\r\n            <span className=\"label\">Розміри:</span>\r\n            <span className=\"value\">\r\n              {product.dimensions.length}×{product.dimensions.width}×{product.dimensions.height} {product.dimensions.unit}\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"product-detail\">\r\n            <span className=\"label\">Ціна:</span>\r\n            <span className=\"value price\">{product.price.ua}</span>\r\n          </div>\r\n\r\n          <div className=\"product-detail\">\r\n            <span className=\"label\">Обробка:</span>\r\n            <span className=\"value\">{product.finishType}</span>\r\n          </div>\r\n\r\n          {product.features?.ua && (\r\n            <div className=\"product-detail\">\r\n              <span className=\"label\">Особливості:</span>\r\n              <div className=\"features-list\">\r\n                {product.features.ua.slice(0, 2).map((feature, index) => (\r\n                  <span key={index} className=\"feature-tag\">\r\n                    {feature}\r\n                  </span>\r\n                ))}\r\n                {product.features.ua.length > 2 && (\r\n                  <span className=\"feature-tag more\">\r\n                    +{product.features.ua.length - 2}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Дії */}\r\n      <div className=\"product-card__actions\">\r\n        <div className=\"action-buttons\">\r\n          <button\r\n            onClick={handleEdit}\r\n            className=\"action-btn action-btn--edit\"\r\n            title=\"Редагувати продукт\"\r\n          >\r\n            ✏️\r\n          </button>\r\n\r\n          <button\r\n            onClick={handleDuplicate}\r\n            className=\"action-btn action-btn--duplicate\"\r\n            title=\"Дублювати продукт\"\r\n          >\r\n            📋\r\n          </button>\r\n\r\n          <button\r\n            onClick={handleStockToggle}\r\n            className={`action-btn action-btn--stock ${product.inStock ? 'in-stock' : 'out-of-stock'}`}\r\n            title={product.inStock ? 'Позначити як відсутній' : 'Позначити як наявний'}\r\n          >\r\n            {product.inStock ? '📦' : '📭'}\r\n          </button>\r\n\r\n          <button\r\n            onClick={handleDelete}\r\n            className=\"action-btn action-btn--delete\"\r\n            title=\"Видалити продукт\"\r\n          >\r\n            🗑️\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"card-footer\">\r\n          <span className=\"customizable-badge\">\r\n            {product.customizable ? '🔧 Кастомізація' : '📐 Стандарт'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductCard","import React from 'react'\r\nimport useAdminProductsStore from '../../../stores/adminProductsStore'\r\n\r\nconst ProductsFilter = () => {\r\n  const {\r\n    searchQuery,\r\n    selectedCategory,\r\n    sortBy,\r\n    sortOrder,\r\n    hasUnsavedChanges,\r\n    isLoading,\r\n    setSearchQuery,\r\n    setSelectedCategory,\r\n    setSortBy,\r\n    openEditModal,\r\n    exportProducts,\r\n    saveProducts,\r\n    resetProducts,\r\n    refreshProducts,\r\n    clearError\r\n  } = useAdminProductsStore()\r\n\r\n  const categories = [\r\n    { value: 'all', label: 'Всі категорії', count: null },\r\n    { value: 'gabbro', label: 'Габро (чорний)', count: null },\r\n    { value: 'granite', label: 'Граніт (сірий/коричневий)', count: null },\r\n    { value: 'green', label: 'Зелений граніт', count: null },\r\n    { value: 'labradorite', label: 'Лабрадорит', count: null }\r\n  ]\r\n\r\n  const sortOptions = [\r\n    { value: 'name', label: 'За назвою' },\r\n    { value: 'price', label: 'За ціною' },\r\n    { value: 'dimensions', label: 'За розміром' },\r\n    { value: 'inStock', label: 'За наявністю' }\r\n  ]\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchQuery(e.target.value)\r\n    clearError()\r\n  }\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setSelectedCategory(e.target.value)\r\n    clearError()\r\n  }\r\n\r\n  const handleSortChange = (e) => {\r\n    setSortBy(e.target.value)\r\n  }\r\n\r\n  const clearSearch = () => {\r\n    setSearchQuery('')\r\n    setSelectedCategory('all')\r\n    clearError()\r\n  }\r\n\r\n  const handleSaveProducts = async () => {\r\n    const result = await saveProducts()\r\n    if (result.success) {\r\n      alert('✅ Зміни успішно збережено!')\r\n    } else {\r\n      alert(`❌ Помилка збереження: ${result.error}`)\r\n    }\r\n  }\r\n\r\n  const handleResetProducts = async () => {\r\n    if (hasUnsavedChanges) {\r\n      const confirm = window.confirm(\r\n        'Ви впевнені, що хочете скинути всі незбережені зміни? Ця дія незворотна.'\r\n      )\r\n      if (!confirm) return\r\n    }\r\n\r\n    const result = await resetProducts()\r\n    if (result.success) {\r\n      alert('🔄 Дані скинуто до оригінального стану')\r\n    } else {\r\n      alert(`❌ Помилка скидання: ${result.error}`)\r\n    }\r\n  }\r\n\r\n  const handleRefreshProducts = async () => {\r\n    if (hasUnsavedChanges) {\r\n      const confirm = window.confirm(\r\n        'У вас є незбережені зміни. Оновлення призведе до їх втрати. Продовжити?'\r\n      )\r\n      if (!confirm) return\r\n    }\r\n\r\n    const result = await refreshProducts()\r\n    if (result.success) {\r\n      alert('✅ Продукти оновлено з сервера!')\r\n    } else {\r\n      alert(`❌ Помилка оновлення: ${result.error}`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"products-filter\">\r\n      <div className=\"filter-section\">\r\n        <div className=\"filter-row\">\r\n          {/* Пошук */}\r\n          <div className=\"search-group\">\r\n            <div className=\"search-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Пошук по назві, ID або текстурі...\"\r\n                value={searchQuery}\r\n                onChange={handleSearchChange}\r\n                className=\"search-input\"\r\n              />\r\n              {searchQuery && (\r\n                <button\r\n                  onClick={() => setSearchQuery('')}\r\n                  className=\"clear-search-btn\"\r\n                  title=\"Очистити пошук\"\r\n                >\r\n                  ✕\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Категорії */}\r\n          <div className=\"filter-group\">\r\n            <select\r\n              value={selectedCategory}\r\n              onChange={handleCategoryChange}\r\n              className=\"filter-select\"\r\n            >\r\n              {categories.map(category => (\r\n                <option key={category.value} value={category.value}>\r\n                  {category.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Сортування */}\r\n          <div className=\"filter-group\">\r\n            <select\r\n              value={sortBy}\r\n              onChange={handleSortChange}\r\n              className=\"filter-select\"\r\n            >\r\n              {sortOptions.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <button\r\n              onClick={() => setSortBy(sortBy)}\r\n              className={`sort-order-btn ${sortOrder === 'desc' ? 'desc' : 'asc'}`}\r\n              title={`Сортування: ${sortOrder === 'asc' ? 'зростання' : 'спадання'}`}\r\n            >\r\n              {sortOrder === 'asc' ? '↑' : '↓'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Швидкі дії */}\r\n        <div className=\"filter-actions\">\r\n          <div className=\"action-group\">\r\n            <button\r\n              onClick={() => openEditModal()}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              ➕ Додати продукт\r\n            </button>\r\n\r\n            <button\r\n              onClick={handleRefreshProducts}\r\n              className=\"btn btn-secondary\"\r\n              title=\"Оновити продукти з сервера\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? '⏳ Оновлення...' : '🔄 Оновити'}\r\n            </button>\r\n\r\n            <button\r\n              onClick={exportProducts}\r\n              className=\"btn btn-secondary\"\r\n              title=\"Експортувати всі продукти в JSON\"\r\n              disabled={isLoading}\r\n            >\r\n              📤 Експорт\r\n            </button>\r\n\r\n            {hasUnsavedChanges && (\r\n              <button\r\n                onClick={handleSaveProducts}\r\n                className=\"btn btn-success\"\r\n                title=\"Зберегти всі зміни на сервер\"\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? '⏳ Збереження...' : '💾 Зберегти зміни'}\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              onClick={handleResetProducts}\r\n              className=\"btn btn-outline\"\r\n              title=\"Скинути всі зміни до оригінального стану\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? '⏳ Скидання...' : '🔄 Скинути зміни'}\r\n            </button>\r\n          </div>\r\n\r\n          {/* Очистка фільтрів */}\r\n          {(searchQuery || selectedCategory !== 'all') && (\r\n            <button\r\n              onClick={clearSearch}\r\n              className=\"btn btn-ghost\"\r\n              title=\"Очистити всі фільтри\"\r\n            >\r\n              🗑️ Очистити фільтри\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Активні фільтри */}\r\n      {(searchQuery || selectedCategory !== 'all') && (\r\n        <div className=\"active-filters\">\r\n          <span className=\"active-filters-label\">Активні фільтри:</span>\r\n\r\n          {searchQuery && (\r\n            <span className=\"filter-tag\">\r\n              Пошук: \"{searchQuery}\"\r\n              <button onClick={() => setSearchQuery('')}>✕</button>\r\n            </span>\r\n          )}\r\n\r\n          {selectedCategory !== 'all' && (\r\n            <span className=\"filter-tag\">\r\n              Категорія: {categories.find(c => c.value === selectedCategory)?.label}\r\n              <button onClick={() => setSelectedCategory('all')}>✕</button>\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductsFilter","import React from 'react'\r\nimport useAdminProductsStore from '../../../stores/adminProductsStore'\r\nimport ProductCard from './ProductCard'\r\nimport ProductsFilter from './ProductsFilter'\r\nimport './products-admin.scss'\r\n\r\nconst ProductsList = () => {\r\n  const {\r\n    getFilteredProducts,\r\n    searchQuery,\r\n    selectedCategory,\r\n    sortBy,\r\n    sortOrder,\r\n    isLoading,\r\n    error,\r\n    openEditModal,\r\n    deleteProduct,\r\n    duplicateProduct,\r\n    toggleProductStock,\r\n    getProductsStats\r\n  } = useAdminProductsStore()\r\n\r\n  const filteredProducts = getFilteredProducts()\r\n  const stats = getProductsStats()\r\n\r\n  const handleEdit = (product) => {\r\n    openEditModal(product)\r\n  }\r\n\r\n  const handleDelete = async (productId) => {\r\n    if (window.confirm('Ви впевнені, що хочете видалити цей продукт?')) {\r\n      const result = await deleteProduct(productId)\r\n      if (!result.success) {\r\n        alert(`Помилка: ${result.error}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDuplicate = async (productId) => {\r\n    const result = await duplicateProduct(productId)\r\n    if (!result.success) {\r\n      alert(`Помилка: ${result.error}`)\r\n    }\r\n  }\r\n\r\n  const handleToggleStock = (productId) => {\r\n    toggleProductStock(productId)\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"products-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Завантаження продуктів...</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"products-list\">\r\n      {/* Статистика */}\r\n      <div className=\"products-stats\">\r\n        <div className=\"stats-grid\">\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-number\">{stats.total}</span>\r\n            <span className=\"stat-label\">Всього продуктів</span>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-number\">{stats.inStock}</span>\r\n            <span className=\"stat-label\">В наявності</span>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-number\">{stats.outOfStock}</span>\r\n            <span className=\"stat-label\">Немає в наявності</span>\r\n          </div>\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-number\">{stats.priceRange.min} - {stats.priceRange.max}</span>\r\n            <span className=\"stat-label\">Діапазон цін (грн/м²)</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Фільтри */}\r\n      <ProductsFilter />\r\n\r\n      {/* Помилки */}\r\n      {error && (\r\n        <div className=\"products-error\">\r\n          <p>❌ {error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Результати пошуку */}\r\n      <div className=\"products-results\">\r\n        <div className=\"results-header\">\r\n          <h3>\r\n            Знайдено {filteredProducts.length}\r\n            {filteredProducts.length === 1 ? ' продукт' :\r\n             filteredProducts.length < 5 ? ' продукти' : ' продуктів'}\r\n            {searchQuery && (\r\n              <span className=\"search-query\"> за запитом \"{searchQuery}\"</span>\r\n            )}\r\n            {selectedCategory !== 'all' && (\r\n              <span className=\"category-filter\"> в категорії \"{selectedCategory}\"</span>\r\n            )}\r\n          </h3>\r\n\r\n          <div className=\"sort-info\">\r\n            Сортування: {sortBy === 'name' ? 'за назвою' :\r\n                       sortBy === 'price' ? 'за ціною' :\r\n                       sortBy === 'dimensions' ? 'за розміром' :\r\n                       sortBy === 'inStock' ? 'за наявністю' : 'за ID'}\r\n            ({sortOrder === 'asc' ? 'зростання' : 'спадання'})\r\n          </div>\r\n        </div>\r\n\r\n        {/* Список продуктів */}\r\n        {filteredProducts.length === 0 ? (\r\n          <div className=\"no-products\">\r\n            <div className=\"no-products-icon\">📦</div>\r\n            <h3>Продукти не знайдені</h3>\r\n            <p>\r\n              {searchQuery || selectedCategory !== 'all'\r\n                ? 'Спробуйте змінити критерії пошуку або фільтри'\r\n                : 'Ще немає жодного продукту'\r\n              }\r\n            </p>\r\n            <button\r\n              onClick={() => openEditModal()}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              ➕ Додати перший продукт\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"products-grid\">\r\n            {filteredProducts.map(product => (\r\n              <ProductCard\r\n                key={product.id}\r\n                product={product}\r\n                onEdit={handleEdit}\r\n                onDelete={handleDelete}\r\n                onDuplicate={handleDuplicate}\r\n                onToggleStock={handleToggleStock}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductsList","import React, { useState, useEffect } from 'react'\r\nimport useAdminProductsStore from '../../../stores/adminProductsStore'\r\nimport { surfaceFinishTypes, standardSizes } from '../../../constants/productsData'\r\n\r\nconst ProductEditor = () => {\r\n  const {\r\n    editingProduct,\r\n    isEditModalOpen,\r\n    closeEditModal,\r\n    addProduct,\r\n    updateProduct,\r\n    isLoading,\r\n    error\r\n  } = useAdminProductsStore()\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: {\r\n      ua: '',\r\n      en: '',\r\n      de: '',\r\n      pl: ''\r\n    },\r\n    textureId: 'black-001',\r\n    finishType: 'sawn-thermal-top',\r\n    size: 'paver_200x100x50',\r\n    dimensions: { ...standardSizes.paver_200x100x50 },\r\n    price: {\r\n      ua: '',\r\n      en: '',\r\n      de: '',\r\n      pl: ''\r\n    },\r\n    image: '',\r\n    description: {\r\n      ua: '',\r\n      en: '',\r\n      de: '',\r\n      pl: ''\r\n    },\r\n    features: {\r\n      ua: [],\r\n      en: [],\r\n      de: [],\r\n      pl: []\r\n    },\r\n    inStock: true,\r\n    customizable: true\r\n  })\r\n\r\n  const [customDimensions, setCustomDimensions] = useState(false)\r\n  const [newFeature, setNewFeature] = useState({\r\n    ua: '', en: '', de: '', pl: ''\r\n  })\r\n\r\n  // Заповнення форми при редагуванні\r\n  useEffect(() => {\r\n    if (editingProduct) {\r\n      setFormData({\r\n        name: editingProduct.name || { ua: '', en: '', de: '', pl: '' },\r\n        textureId: editingProduct.textureId || 'black-001',\r\n        finishType: editingProduct.finishType || 'sawn-thermal-top',\r\n        size: editingProduct.size || 'paver_200x100x50',\r\n        dimensions: editingProduct.dimensions || { ...standardSizes.paver_200x100x50 },\r\n        price: editingProduct.price || { ua: '', en: '', de: '', pl: '' },\r\n        image: editingProduct.image || '',\r\n        description: editingProduct.description || { ua: '', en: '', de: '', pl: '' },\r\n        features: editingProduct.features || { ua: [], en: [], de: [], pl: [] },\r\n        inStock: editingProduct.inStock !== undefined ? editingProduct.inStock : true,\r\n        customizable: editingProduct.customizable !== undefined ? editingProduct.customizable : true\r\n      })\r\n\r\n      setCustomDimensions(editingProduct.size === 'custom')\r\n    } else {\r\n      // Скидання форми для нового продукту\r\n      setFormData({\r\n        name: { ua: '', en: '', de: '', pl: '' },\r\n        textureId: 'black-001',\r\n        finishType: 'sawn-thermal-top',\r\n        size: 'paver_200x100x50',\r\n        dimensions: { ...standardSizes.paver_200x100x50 },\r\n        price: { ua: '', en: '', de: '', pl: '' },\r\n        image: '',\r\n        description: { ua: '', en: '', de: '', pl: '' },\r\n        features: { ua: [], en: [], de: [], pl: [] },\r\n        inStock: true,\r\n        customizable: true\r\n      })\r\n      setCustomDimensions(false)\r\n    }\r\n  }, [editingProduct])\r\n\r\n  // Обробка зміни розміру\r\n  useEffect(() => {\r\n    if (formData.size !== 'custom' && standardSizes[formData.size]) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        dimensions: { ...standardSizes[formData.size] }\r\n      }))\r\n      setCustomDimensions(false)\r\n    } else if (formData.size === 'custom') {\r\n      setCustomDimensions(true)\r\n    }\r\n  }, [formData.size])\r\n\r\n  const handleInputChange = (field, value, lang = null) => {\r\n    if (lang) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [field]: {\r\n          ...prev[field],\r\n          [lang]: value\r\n        }\r\n      }))\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [field]: value\r\n      }))\r\n    }\r\n  }\r\n\r\n  const handleDimensionChange = (dimension, value) => {\r\n    const numValue = parseFloat(value) || 0\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      dimensions: {\r\n        ...prev.dimensions,\r\n        [dimension]: numValue\r\n      }\r\n    }))\r\n  }\r\n\r\n  const addFeature = () => {\r\n    if (newFeature.ua.trim()) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        features: {\r\n          ua: [...prev.features.ua, newFeature.ua.trim()],\r\n          en: [...prev.features.en, newFeature.en.trim() || newFeature.ua.trim()],\r\n          de: [...prev.features.de, newFeature.de.trim() || newFeature.ua.trim()],\r\n          pl: [...prev.features.pl, newFeature.pl.trim() || newFeature.ua.trim()]\r\n        }\r\n      }))\r\n      setNewFeature({ ua: '', en: '', de: '', pl: '' })\r\n    }\r\n  }\r\n\r\n  const removeFeature = (index) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      features: {\r\n        ua: prev.features.ua.filter((_, i) => i !== index),\r\n        en: prev.features.en.filter((_, i) => i !== index),\r\n        de: prev.features.de.filter((_, i) => i !== index),\r\n        pl: prev.features.pl.filter((_, i) => i !== index)\r\n      }\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    // Валідація\r\n    if (!formData.name.ua.trim()) {\r\n      alert('Будь ласка, введіть назву продукту українською')\r\n      return\r\n    }\r\n\r\n    if (!formData.price.ua.trim()) {\r\n      alert('Будь ласка, введіть ціну')\r\n      return\r\n    }\r\n\r\n    try {\r\n      let result\r\n      if (editingProduct) {\r\n        result = await updateProduct(editingProduct.id, formData)\r\n      } else {\r\n        result = await addProduct(formData)\r\n      }\r\n\r\n      if (result.success) {\r\n        closeEditModal()\r\n      } else {\r\n        alert(`Помилка: ${result.error}`)\r\n      }\r\n    } catch (error) {\r\n      alert(`Помилка: ${error.message}`)\r\n    }\r\n  }\r\n\r\n  if (!isEditModalOpen) return null\r\n\r\n  return (\r\n    <div className=\"product-editor-overlay\">\r\n      <div className=\"product-editor-modal\">\r\n        <div className=\"modal-header\">\r\n          <h2>\r\n            {editingProduct ? 'Редагувати продукт' : 'Додати новий продукт'}\r\n          </h2>\r\n          <button\r\n            onClick={closeEditModal}\r\n            className=\"close-btn\"\r\n            disabled={isLoading}\r\n          >\r\n            ✕\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"product-form\">\r\n          <div className=\"form-sections\">\r\n            {/* Основна інформація */}\r\n            <div className=\"form-section\">\r\n              <h3>Основна інформація</h3>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Назва продукту *</label>\r\n                <div className=\"lang-inputs\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Українська\"\r\n                    value={formData.name.ua}\r\n                    onChange={(e) => handleInputChange('name', e.target.value, 'ua')}\r\n                    required\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"English\"\r\n                    value={formData.name.en}\r\n                    onChange={(e) => handleInputChange('name', e.target.value, 'en')}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Deutsch\"\r\n                    value={formData.name.de}\r\n                    onChange={(e) => handleInputChange('name', e.target.value, 'de')}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Polski\"\r\n                    value={formData.name.pl}\r\n                    onChange={(e) => handleInputChange('name', e.target.value, 'pl')}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                  <label>Тип текстури</label>\r\n                  <select\r\n                    value={formData.textureId}\r\n                    onChange={(e) => handleInputChange('textureId', e.target.value)}\r\n                  >\r\n                    <option value=\"black-001\">Чорний граніт (Black-001)</option>\r\n                    <option value=\"green-001\">Зелений граніт (Green-001)</option>\r\n                    <option value=\"green-002\">Зелений граніт (Green-002)</option>\r\n                    <option value=\"red-brown-002\">Червоно-коричневий (Red-Brown-002)</option>\r\n                    <option value=\"red-brown-003\">Червоно-коричневий (Red-Brown-003)</option>\r\n                    <option value=\"red-brown-008\">Червоно-коричневий (Red-Brown-008)</option>\r\n                    <option value=\"gray-001\">Сірий граніт (Gray-001)</option>\r\n                    <option value=\"labradorite-001\">Лабрадорит (Labradorite-001)</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label>Тип обробки</label>\r\n                  <select\r\n                    value={formData.finishType}\r\n                    onChange={(e) => handleInputChange('finishType', e.target.value)}\r\n                  >\r\n                    {Object.entries(surfaceFinishTypes).map(([key, finish]) => (\r\n                      <option key={key} value={key}>\r\n                        {finish.name.ua}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>URL зображення (необов'язково)</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"https://example.com/image.jpg або залиште порожнім\"\r\n                  value={formData.image}\r\n                  onChange={(e) => handleInputChange('image', e.target.value)}\r\n                />\r\n                <small className=\"form-hint\">\r\n                  Можна залишити порожнім або вказати повний URL до зображення\r\n                </small>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Розміри */}\r\n            <div className=\"form-section\">\r\n              <h3>Розміри</h3>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Стандартний розмір</label>\r\n                <select\r\n                  value={formData.size}\r\n                  onChange={(e) => handleInputChange('size', e.target.value)}\r\n                >\r\n                  {Object.entries(standardSizes).map(([key, size]) => (\r\n                    <option key={key} value={key}>\r\n                      {key === 'custom' ? 'Кастомний розмір' : `${size.length}×${size.width}×${size.height} ${size.unit}`}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              {customDimensions && (\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group\">\r\n                    <label>Довжина (мм)</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={formData.dimensions.length}\r\n                      onChange={(e) => handleDimensionChange('length', e.target.value)}\r\n                      min=\"1\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Ширина (мм)</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={formData.dimensions.width}\r\n                      onChange={(e) => handleDimensionChange('width', e.target.value)}\r\n                      min=\"1\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Висота (мм)</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={formData.dimensions.height}\r\n                      onChange={(e) => handleDimensionChange('height', e.target.value)}\r\n                      min=\"1\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Ціна */}\r\n            <div className=\"form-section\">\r\n              <h3>Ціна</h3>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                  <label>Ціна (UAH) *</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"1140 грн/м²\"\r\n                    value={formData.price.ua}\r\n                    onChange={(e) => handleInputChange('price', e.target.value, 'ua')}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Ціна (EUR)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"21 €/m²\"\r\n                    value={formData.price.en}\r\n                    onChange={(e) => handleInputChange('price', e.target.value, 'en')}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Особливості */}\r\n            <div className=\"form-section\">\r\n              <h3>Особливості продукту</h3>\r\n\r\n              <div className=\"features-list\">\r\n                {formData.features.ua.map((feature, index) => (\r\n                  <div key={index} className=\"feature-item\">\r\n                    <span>{feature}</span>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => removeFeature(index)}\r\n                      className=\"remove-feature-btn\"\r\n                    >\r\n                      ✕\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"add-feature\">\r\n                <div className=\"lang-inputs\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Особливість українською\"\r\n                    value={newFeature.ua}\r\n                    onChange={(e) => setNewFeature(prev => ({...prev, ua: e.target.value}))}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"English\"\r\n                    value={newFeature.en}\r\n                    onChange={(e) => setNewFeature(prev => ({...prev, en: e.target.value}))}\r\n                  />\r\n                </div>\r\n                <button type=\"button\" onClick={addFeature} className=\"add-feature-btn\">\r\n                  ➕ Додати особливість\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Опції */}\r\n            <div className=\"form-section\">\r\n              <h3>Опції</h3>\r\n              <div className=\"checkbox-group\">\r\n                <label className=\"checkbox-label\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.inStock}\r\n                    onChange={(e) => handleInputChange('inStock', e.target.checked)}\r\n                  />\r\n                  В наявності\r\n                </label>\r\n                <label className=\"checkbox-label\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.customizable}\r\n                    onChange={(e) => handleInputChange('customizable', e.target.checked)}\r\n                  />\r\n                  Можливе кастомне виготовлення\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"form-error\">\r\n              ❌ {error}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-actions\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={closeEditModal}\r\n              className=\"btn btn-secondary\"\r\n              disabled={isLoading}\r\n            >\r\n              Скасувати\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'Збереження...' : editingProduct ? 'Оновити' : 'Створити'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductEditor","import React, { useEffect } from 'react'\r\nimport { ProductsList, ProductEditor } from '../../components/admin/products'\r\nimport AdminNavigation from '../../components/admin/navigation/AdminNavigation'\r\nimport useAdminProductsStore from '../../stores/adminProductsStore'\r\nimport '../../components/admin/products/products-admin.scss'\r\n\r\nconst ProductsManager = () => {\r\n  const { loadProducts, hasUnsavedChanges } = useAdminProductsStore()\r\n\r\n  useEffect(() => {\r\n    loadProducts()\r\n  }, [loadProducts])\r\n\r\n  // Попередження при спробі покинути сторінку з незбереженими змінами\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (e) => {\r\n      if (hasUnsavedChanges) {\r\n        e.preventDefault()\r\n        e.returnValue = 'У вас є незбережені зміни. Ви впевнені, що хочете покинути сторінку?'\r\n      }\r\n    }\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload)\r\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload)\r\n  }, [hasUnsavedChanges])\r\n\r\n  return (\r\n    <div className=\"products-manager\">\r\n      <AdminNavigation pageType=\"products\" />\r\n\r\n      <div className=\"products-manager-header\">\r\n        <h1>Управління продуктами</h1>\r\n        <p>Створюйте, редагуйте та керуйте каталогом гранітних виробів</p>\r\n        {hasUnsavedChanges && (\r\n          <div style={{\r\n            color: '#f59e0b',\r\n            fontSize: '0.875rem',\r\n            marginTop: '0.5rem',\r\n            fontWeight: '500'\r\n          }}>\r\n            ⚠️ У вас є незбережені зміни\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"products-manager-content\">\r\n        <ProductsList />\r\n        <ProductEditor />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductsManager","import React from 'react'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport useAuthStore from '../../../stores/authStore'\r\nimport './AdminNavigation.scss'\r\n\r\nconst AdminNavigation = ({ pageType = '' }) => {\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const { logout } = useAuthStore()\r\n\r\n  const handleLogout = () => {\r\n    logout()\r\n    navigate('/admin')\r\n  }\r\n\r\n  // Налаштування для різних типів сторінок\r\n  const getPageConfig = () => {\r\n    const currentPath = location.pathname\r\n\r\n    if (currentPath.includes('/admin/products')) {\r\n      return {\r\n        title: 'Управління продуктами',\r\n        siteLink: '/ua/products',\r\n        siteLinkText: 'Переглянути каталог продуктів'\r\n      }\r\n    } else if (currentPath.includes('/admin/gallery')) {\r\n      return {\r\n        title: 'Управління галереєю',\r\n        siteLink: '/ua/gallery',\r\n        siteLinkText: 'Переглянути галерею проектів'\r\n      }\r\n    } else if (currentPath.includes('/admin/articles')) {\r\n      return {\r\n        title: 'Управління статтями',\r\n        siteLink: '/ua/articles',\r\n        siteLinkText: 'Переглянути статті блогу'\r\n      }\r\n    } else {\r\n      return {\r\n        title: 'Адміністративна панель',\r\n        siteLink: '/ua',\r\n        siteLinkText: 'Перейти на головну сторінку сайту'\r\n      }\r\n    }\r\n  }\r\n\r\n  const config = getPageConfig()\r\n\r\n  return (\r\n    <div className=\"admin-navigation\">\r\n      <div className=\"admin-nav-container\">\r\n        {/* Логотип та назва */}\r\n        <div className=\"admin-nav-brand\">\r\n          <Link to=\"/admin/dashboard\" className=\"admin-nav-logo\">\r\n            <span className=\"logo-text\">EuroGranite</span>\r\n            <span className=\"admin-badge\">Адмін</span>\r\n          </Link>\r\n        </div>\r\n\r\n\r\n        {/* Дії користувача */}\r\n        <div className=\"admin-nav-actions\">\r\n          {/* Кнопка переходу на сайт */}\r\n          <a\r\n            href={config.siteLink}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"admin-nav-btn admin-nav-btn--site\"\r\n            title={config.siteLinkText}\r\n          >\r\n            <span className=\"btn-icon\">🌐</span>\r\n            <span className=\"btn-text\">Сайт</span>\r\n          </a>\r\n\r\n          {/* Кнопка повернення на головну адмінпанелі */}\r\n          {!location.pathname.includes('/admin/dashboard') && (\r\n            <Link\r\n              to=\"/admin/dashboard\"\r\n              className=\"admin-nav-btn admin-nav-btn--home\"\r\n              title=\"Повернутися на головну адмінпанелі\"\r\n            >\r\n              <span className=\"btn-icon\">🏠</span>\r\n              <span className=\"btn-text\">Головна</span>\r\n            </Link>\r\n          )}\r\n\r\n          {/* Кнопка виходу */}\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"admin-nav-btn admin-nav-btn--logout\"\r\n            title=\"Вийти з адмінпанелі\"\r\n          >\r\n            <span className=\"btn-icon\">🚪</span>\r\n            <span className=\"btn-text\">Вихід</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Хлібні крошки для навігації */}\r\n      <div className=\"admin-breadcrumbs\">\r\n        <div className=\"breadcrumbs-container\">\r\n          {location.pathname === '/admin/dashboard' ? (\r\n            <span className=\"breadcrumb-current\">Головна</span>\r\n          ) : (\r\n            <>\r\n              <Link to=\"/admin/dashboard\" className=\"breadcrumb-item\">\r\n                Головна\r\n              </Link>\r\n              <span className=\"breadcrumb-separator\">›</span>\r\n              <span className=\"breadcrumb-current\">{config.title}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminNavigation"],"names":["API_BASE_URL","apiClient","get","endpoint","response","fetch","concat","ok","Error","status","json","post","data","method","headers","body","JSON","stringify","put","delete","create","set","products","originalProducts","productsData","samples","hasUnsavedChanges","isInitialized","isLoading","error","editingProduct","isEditModalOpen","searchQuery","selectedCategory","sortBy","sortOrder","setSearchQuery","query","setSelectedCategory","category","setSortBy","field","getFilteredProducts","filtered","toLowerCase","filter","product","name","ua","includes","en","id","textureId","sort","a","b","aValue","bValue","parseFloat","price","replace","dimensions","length","width","height","inStock","loadProducts","async","forceRefresh","arguments","undefined","console","log","success","message","refreshProducts","addProduct","productData","updatedProducts","updateProduct","productId","updates","map","deleteProduct","duplicateProduct","originalProduct","find","p","duplicatedProduct","_objectSpread","Date","now","de","pl","openEditModal","closeEditModal","toggleProductStock","saveProducts","resetProducts","exportProducts","dataStr","dataBlob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","toISOString","split","click","revokeObjectURL","clearError","getProductsStats","total","outOfStock","categories","gabbro","granite","green","labradorite","priceRange","min","Math","max","_ref","_product$features","onEdit","onDelete","onDuplicate","onToggleStock","_jsxs","className","children","image","_jsx","src","alt","onError","e","target","style","display","nextSibling","backgroundColor","title","pop","unit","finishType","features","slice","feature","index","onClick","stopPropagation","customizable","ProductsFilter","_categories$find","useAdminProductsStore","value","label","count","placeholder","onChange","option","window","confirm","result","alert","disabled","clearSearch","c","ProductsList","filteredProducts","stats","handleEdit","handleDelete","handleDuplicate","handleToggleStock","ProductCard","ProductEditor","formData","setFormData","useState","size","standardSizes","paver_200x100x50","description","customDimensions","setCustomDimensions","newFeature","setNewFeature","useEffect","prev","handleInputChange","lang","handleDimensionChange","dimension","numValue","onSubmit","preventDefault","trim","required","Object","entries","surfaceFinishTypes","key","finish","_ref2","_","i","removeFeature","addFeature","checked","ProductsManager","handleBeforeUnload","returnValue","addEventListener","removeEventListener","AdminNavigation","pageType","color","fontSize","marginTop","fontWeight","navigate","useNavigate","location","useLocation","logout","useAuthStore","config","getPageConfig","currentPath","pathname","siteLink","siteLinkText","Link","to","rel","handleLogout","_Fragment"],"sourceRoot":""}