{"version":3,"file":"static/js/459.99320c0e.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../node_modules/framer-motion/dist/es/utils/use-in-view.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs"],"sourcesContent":["import { resolveElements } from 'motion-dom';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry.target, entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (typeof onEnd === \"function\") {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","\"use client\";\nimport { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false, initial = false, } = {}) {\n    const [isInView, setInView] = useState(initial);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","\"use client\";\nimport { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","\"use client\";\nimport { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","\"use client\";\nimport { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","\"use client\";\nimport { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","\"use client\";\nimport { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","\"use client\";\nimport { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","\"use client\";\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","\"use client\";\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","\"use client\";\nimport { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Include externalRef in dependencies to ensure the callback updates\n     * when the ref changes, allowing proper ref forwarding.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","\"use client\";\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","\"use client\";\nimport { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","import { formatErrorMessage } from './format-error-message.mjs';\n\nlet warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message, errorCode) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(formatErrorMessage(message, errorCode));\n        }\n    };\n    invariant = (check, message, errorCode) => {\n        if (!check) {\n            throw new Error(formatErrorMessage(message, errorCode));\n        }\n    };\n}\n\nexport { invariant, warning };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { invariant } from 'motion-utils';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","\"use client\";\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { animationControls } from './animation-controls.mjs';\n\n/**\n * Creates `LegacyAnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `LegacyAnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n"],"names":["thresholds","some","all","useInView","ref","root","margin","amount","once","initial","arguments","length","undefined","isInView","setInView","useState","useEffect","current","options","elementOrSelector","onStart","rootMargin","elements","resolveElements","activeIntersections","WeakMap","observer","IntersectionObserver","entries","forEach","entry","onEnd","get","target","isIntersecting","Boolean","newOnEnd","set","unobserve","delete","threshold","element","observe","disconnect","inView","onEnter","clamp","min","max","v","resolveVariant","visualElement","definition","custom","props","getProps","resolveVariantFromProps","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","positionalKeys","Set","transformPropOrder","number","test","parse","parseFloat","transform","alpha","_objectSpread","scale","default","isNumOrPxType","px","transformKeys","nonTranslationalTransformKeys","filter","key","has","removeNonTranslationalTransform","removedTransforms","value","getValue","push","startsWith","positionalValues","width","_ref","_ref2","x","paddingLeft","paddingRight","height","_ref3","_ref4","y","paddingTop","paddingBottom","top","_bbox","_ref5","left","_ref6","bottom","_ref7","_ref8","right","_ref9","_ref0","_ref1","parseValueFromTransform","_ref10","translateX","translateY","optimizedAppearDataAttribute","camelToDash","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","process","frameData","statsBuffer","frameloop","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","MotionGlobalConfig","useManualTiming","performance","now","Math","keepAlive","immediate","i","isKeyframesTarget","Array","isArray","reverseEasing","easing","p","mixNumber","from","to","progress","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","str","replace","toLowerCase","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","color","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","type","sanitize","convertNumbersToZero","getAnimatableNone","complex","_v$match","_v$match2","isNaN","match","floatRegex","parsed","transformer","map","toFromDifference","circIn","sin","acos","circOut","circInOut","mirrorEasing","radToDeg","rad","PI","rotate","angle","atan2","rebaseAngle","matrix2dParsers","scaleX","scaleY","abs","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","readTransformValue","instance","getComputedStyle","hsla","isColorString","splitColor","hue","saturation","lightness","alpha$1","round","percent","setMotionValue","hasValue","addValue","motionValue","resolveFinalValueInKeyframes","setTarget","transitionEnd","transition","_objectWithoutProperties","_excluded","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","isMotionValue","getVelocity","window","noop","any","velocityPerSecond","velocity","frameDuration","useConstant","init","useRef","hex","r","g","b","a","substring","red","parseInt","green","blue","rgba","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","originX","originY","measureViewportBox","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","find","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","invariant","concat","fallback","exec","token1","token2","parseCSSVariable","resolved","getPropertyValue","trimmed","isZeroValueString","isNone","maxDefaults","applyDefaultFilter","slice","unit","defaultValue","functionRegex","functions","join","int","transformValueTypes","scaleZ","perspective","transformPerspective","opacity","progressPercentage","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","super","readKeyframes","this","keyframe","finalKeyframe","resolveNoneKeyframes","origin","originType","targetType","needsMeasurement","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","measureKeyframe","jump","measureEndState","_this$removedTransfor","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","microtask","cancelMicrotask","queueMicrotask","featureProps","animation","exit","drag","focus","hover","tap","pan","layout","featureDefinitions","isEnabled","createBox","prefersReducedMotion","hasReducedMotionListener","visualElementStore","isAnimationControls","start","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","variants","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","parent","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","children","shouldReduceMotion","Map","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","latestValues","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","time","frame","baseTarget","initialValues","variantChildren","manuallyAnimateOnMount","_this$scrapeMotionVal","willChange","initialMotionValues","mount","_this$parent","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","addChild","unmount","_this$parent2","cancelFrame","remove","removeChild","feature","isMounted","child","_this$enteringChildre","enteringChildren","valueIsTransform","transformProps","onBindTransform","removeOnChange","on","latestValue","onUpdate","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","owner","stop","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","listener","next","prev","nextValue","prevValue","existingValue","liveStyle","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getDefaultTransition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","readValue","_this$getBaseTargetFr","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","_this$presenceContext","variant","eventName","SubscriptionManager","_len","args","_key","scheduleRenderMicrotask","DOMVisualElement","compareDocumentPosition","vars","childSubscription","latest","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","styleProp","elementStyle","applyProjectionStyles","setProperty","scaleCorrectors","isForcedMotionValue","layoutId","newValues","_visualElement$getVal","HTMLVisualElement","_this$projection","isProjecting","computedStyle","dashKeys","offset","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","_attrs$transformOrigi","_styleProp$transformB","spacing","useDashCase","keys","buildSVGPath","camelCaseAttributes","tag","scrapeMotionValuesFromProps$1","indexOf","charAt","toUpperCase","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","Component","createDomVisualElement","allowProjection","Fragment","LayoutGroupContext","createContext","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","createHtmlRenderState","copyRawValuesOnly","useStyle","Object","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_unused","useRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","PresenceContext","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","valueTarget","makeUseVisualState","config","make","createRenderState","makeState","useHTMLVisualState","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","prototype","hasOwnProperty","call","useMotionRef","externalRef","useCallback","onMount","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","_window$MotionHandoff","_window","_window$MotionHasOpti","_window2","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","animationState","animateChanges","_window$MotionHandoff2","_window3","MotionHandoffMarkAsComplete","createMotionComponent","_Component$displayNam","preloadedFeatures","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","jsx","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","id","createMotionProxy","Proxy","componentCache","factory","deprecatedFactoryFunction","_target","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","reverse","numAnimationTypes","createAnimationState","animations","Promise","animateVisualElement","animateList","createState","isInitialRender","buildResolvedTypeValues","_visualElement$presen","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isActive","isInherited","protectedKeys","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","needsAnimating","valueHasChanged","willAnimateViaParent","parentVariant","delayChildren","delay","calcChildStagger","size","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","resolve","setActive","_visualElement$varian","_child$animationState","setAnimateFunction","makeAnimator","getState","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","_this$unmountControls","isPresent","onExitComplete","prevIsPresent","exitAnimation","then","register","isDragging","isDragActive","addDomEvent","handler","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onMove","handlePointerMove","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","pipe","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","currentVelocity","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","addValueToWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","direction","getCurrentDirection","updateAxis","_this$getAxisMotionVa","getAnimationState","play","finalEvent","finalPanInfo","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this$visualElement$p","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","bounceStiffness","bounceDamping","inertia","timeConstant","restDelta","restSpeed","startAxisValueAnimation","animateMotionValue","_this$getAxisMotionVa2","pause","_this$getAxisMotionVa3","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","isObject","isSVGElement","compareByDepth","FlatTree","isDirty","addUniqueItem","removeItem","sort","timeout","checkElapsed","elapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","appearId","getOptimisedAppearId","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","addProjectionMetrics","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","getValueTransition","onPlay","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","frameSteps","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","_this$scroll","checkNodeWasScrollRoot","_this$scroll2","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","_this$options$visualE","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","_lead$opacity","_follow$opacity","opacityExit","_follow$opacity2","_lead$opacity2","borderLabel","followRadius","leadRadius","mixValues","_this$currentAnimatio","_this$resumingFrom","activeAnimations","keyframes","motionValue$1","animateSingleValue","isSync","onStop","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","_this$getStack","getPrevLead","_this$getStack2","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","_valuesToRender$opaci","corrected","num","resetTree","_node$currentAnimatio","_node$resumeFrom","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","duration","ease","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","_node$scroll","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","setupGesture","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isElementKeyboardAccessible","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","initIntersectionObserver","thresholdNames","gestureAnimations","hasEnteredView","startObserver","viewport","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","e","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","motion","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","elementsToMeasure","transformsToRestore","restore","_element$getValue","scrollTo","complete","readAllKeyframes","flushKeyframeResolvers","isAsync","scheduleResolve","currentValue","valueAsRead","_keyframes$i","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","makeAnimationInstant","hueToRgb","q","t","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","warning","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","originStats","targetStats","mixVisibility","orderedOrigin","pointers","_origin$values$origin","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","done","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","granular","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","c","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","power","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","backInOut","anticipate","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","isNotNull","getFinalKeyframe","repeat","repeatType","speed","resolvedKeyframes","index","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","currentTime","holdTime","playbackSpeed","_this$options$onStop","_this$options","updatedAt","tick","teardown","mainThread","initAnimation","autoplay","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","newTime","_this$driver","driver","newSpeed","hasChanged","_this$options$onPlay","_this$options2","_this$options$onCompl","_this$options3","_this$options$onCance","_this$options4","onCancel","stopDriver","sampleTime","attachTimeline","timeline","_this$driver2","allowFlatten","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","_supportsFlags$suppor","supportsLinearEasing","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","waapi","iterations","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","_options$duration","_options$ease","applyGeneratorOptions","onfinish","updateMotionValue","isCSSVar","setStyle","_this$animation$finis","_this$animation","commitStyles","_this$animation$commi","_this$animation2","_this$animation$effec","_this$animation$effec2","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","_this$animation$effec3","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","_this$finishedTime","sampleAnimation","setWithVelocity","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_this$keyframeResolve2","_this$keyframeResolve","_this$stopTimeline","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","_motionValue$owner","HTMLElement","supportsBrowserAnimation","catch","pendingTimeline","_onReject","_this$keyframeResolve3","_this$keyframeResolve4","underDampedSpring","keyframesTransition","valueKey","valueTransition","when","_delay","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","WillChange","newWillChange","subscriptions","numSubscriptions","getSize","shouldBlockAnimation","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","_visualElement$latest","isAnimating","MotionHandoffAnimation","animateVariant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","resolvedDefinition","clearTime","collectMotionValues","MotionValue","canTrackVelocity","updateAndNotify","_this$events$change","setPrevFrameValue","setCurrent","change","dependents","dependent","dirty","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","_this$events$change2","addDependent","removeDependent","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","destroy","_this$dependents","_this$events$destroy","createUnitType","endsWith","rgbUnit","clampRgbUnit","getValueState","scope","selectorCache","EventTarget","_selectorCache$elemen","querySelectorAll","requestAnimationFrame","singleColorRegex","testProp","isNullish","aName","bName","cName","combineFunctions","transformers","_transition$key","numChildren","maxStaggerDuration","item","setVariants","variantLabels","animationControls","hasMounted","subscribers","setValues","useAnimation"],"sourceRoot":""}