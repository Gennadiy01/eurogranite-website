{"version":3,"file":"static/js/542.5a93fcf9.chunk.js","mappings":"gMAIA,MAmHA,EAnHyBA,KACvB,MAAM,gBAAEC,IAAoBC,EAAAA,EAAAA,KAGtBC,EAAiBA,IACC,qBAAXC,OACFA,OAAOC,SAASC,SAElB,IAcHC,EAXiBC,MACrB,MAGMC,EAHON,IACSO,MAAM,KAAKC,OAAOC,GAAuB,KAAZA,GAErB,GAC9B,MAAI,CAAC,KAAM,KAAM,KAAM,MAAMC,SAASJ,GAC7BA,EAEFR,GAAmB,MAGRO,GACdM,EAAU,mDAEVC,EAAmB,CACvBC,GAAI,CACFC,KAAM,6CACNC,SAAU,yDACVC,MAAO,wCACPC,QAAS,mDACTC,QAAS,6CACTC,SAAU,wCAEZC,GAAI,CACFN,KAAM,OACNC,SAAU,WACVC,MAAO,WACPC,QAAS,UACTC,QAAS,UACTC,SAAU,YAEZE,GAAI,CACFP,KAAM,aACNC,SAAU,WACVC,MAAO,cACPC,QAAS,UACTC,QAAS,UACTC,SAAU,WAEZG,GAAI,CACFR,KAAM,iBACNC,SAAU,WACVC,MAAO,QACPC,QAAS,UACTC,QAAS,UACTC,SAAU,kBAIRI,EAASX,EAAiBR,IAAgBQ,EAAiBC,GAiC3DW,EA9BmBC,MACvB,MACMC,EADO1B,IAAiB2B,QAAQ,uBAAwB,IACxCpB,MAAM,KAAKC,OAAOC,GAAuB,KAAZA,GAE7CmB,EAAc,GAWpB,GARAA,EAAYC,KAAK,CACf,QAAS,WACT,SAAY,EACZ,KAAQN,EAAOT,KACf,KAAO,GAADgB,OAAKnB,EAAO,KAAAmB,OAAI1B,KAIpBsB,EAASK,OAAS,EAAG,CACvB,MAAMC,EAAcN,EAAS,GACzBH,EAAOS,IACTJ,EAAYC,KAAK,CACf,QAAS,WACT,SAAY,EACZ,KAAQN,EAAOS,GACf,KAAO,GAADF,OAAKnB,EAAO,KAAAmB,OAAI1B,EAAW,KAAA0B,OAAIE,IAG3C,CAEA,OAAOJ,GAGcH,GAGvB,GAAID,EAAeO,QAAU,EAC3B,OAAO,KAGT,MAAME,EAAS,CACb,WAAY,qBACZ,QAAS,iBACT,gBAAmBT,GAGrB,OACEU,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAAAC,UACLF,EAAAA,EAAAA,KAAA,UAAQG,KAAK,sBAAqBD,SAC/BE,KAAKC,UAAUN,O","sources":["components/atoms/StructuredData/BreadcrumbSchema.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport useLanguageStore from '../../../stores/languageStore'\r\n\r\nconst BreadcrumbSchema = () => {\r\n  const { currentLanguage } = useLanguageStore()\r\n\r\n  // Parse current path from window.location\r\n  const getCurrentPath = () => {\r\n    if (typeof window !== 'undefined') {\r\n      return window.location.pathname\r\n    }\r\n    return '/'\r\n  }\r\n\r\n  const getCurrentLang = () => {\r\n    const path = getCurrentPath()\r\n    const segments = path.split('/').filter(segment => segment !== '')\r\n    // Check if first segment is a language code\r\n    const langFromPath = segments[0]\r\n    if (['ua', 'en', 'de', 'pl'].includes(langFromPath)) {\r\n      return langFromPath\r\n    }\r\n    return currentLanguage || 'ua'\r\n  }\r\n\r\n  const currentLang = getCurrentLang()\r\n  const baseUrl = 'https://gennadiy01.github.io/eurogranite-website'\r\n\r\n  const breadcrumbLabels = {\r\n    ua: {\r\n      home: 'Головна',\r\n      products: 'Продукція',\r\n      about: 'Про нас',\r\n      contact: 'Контакти',\r\n      gallery: 'Галерея',\r\n      articles: 'Статті'\r\n    },\r\n    en: {\r\n      home: 'Home',\r\n      products: 'Products',\r\n      about: 'About Us',\r\n      contact: 'Contact',\r\n      gallery: 'Gallery',\r\n      articles: 'Articles'\r\n    },\r\n    de: {\r\n      home: 'Startseite',\r\n      products: 'Produkte',\r\n      about: 'Über uns',\r\n      contact: 'Kontakt',\r\n      gallery: 'Galerie',\r\n      articles: 'Artikel'\r\n    },\r\n    pl: {\r\n      home: 'Główna',\r\n      products: 'Produkty',\r\n      about: 'O nas',\r\n      contact: 'Kontakt',\r\n      gallery: 'Galeria',\r\n      articles: 'Artykuły'\r\n    }\r\n  }\r\n\r\n  const labels = breadcrumbLabels[currentLang] || breadcrumbLabels.ua\r\n\r\n  // Parse current path to build breadcrumbs\r\n  const buildBreadcrumbs = () => {\r\n    const path = getCurrentPath().replace('/eurogranite-website', '')\r\n    const segments = path.split('/').filter(segment => segment !== '')\r\n\r\n    const breadcrumbs = []\r\n\r\n    // Always add home\r\n    breadcrumbs.push({\r\n      \"@type\": \"ListItem\",\r\n      \"position\": 1,\r\n      \"name\": labels.home,\r\n      \"item\": `${baseUrl}/${currentLang}`\r\n    })\r\n\r\n    // If we're not on home page, add current page\r\n    if (segments.length > 1) {\r\n      const currentPage = segments[1]\r\n      if (labels[currentPage]) {\r\n        breadcrumbs.push({\r\n          \"@type\": \"ListItem\",\r\n          \"position\": 2,\r\n          \"name\": labels[currentPage],\r\n          \"item\": `${baseUrl}/${currentLang}/${currentPage}`\r\n        })\r\n      }\r\n    }\r\n\r\n    return breadcrumbs\r\n  }\r\n\r\n  const breadcrumbList = buildBreadcrumbs()\r\n\r\n  // Only render if we have more than just home\r\n  if (breadcrumbList.length <= 1) {\r\n    return null\r\n  }\r\n\r\n  const schema = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"BreadcrumbList\",\r\n    \"itemListElement\": breadcrumbList\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <script type=\"application/ld+json\">\r\n        {JSON.stringify(schema)}\r\n      </script>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default BreadcrumbSchema"],"names":["BreadcrumbSchema","currentLanguage","useLanguageStore","getCurrentPath","window","location","pathname","currentLang","getCurrentLang","langFromPath","split","filter","segment","includes","baseUrl","breadcrumbLabels","ua","home","products","about","contact","gallery","articles","en","de","pl","labels","breadcrumbList","buildBreadcrumbs","segments","replace","breadcrumbs","push","concat","length","currentPage","schema","_jsx","Helmet","children","type","JSON","stringify"],"sourceRoot":""}