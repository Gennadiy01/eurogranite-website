import React from 'react'
import useAdminProductsStore from '../../../stores/adminProductsStore'
import ProductCard from './ProductCard'
import ProductsFilter from './ProductsFilter'
import './products-admin.scss'

const ProductsList = () => {
  const {
    getFilteredProducts,
    searchQuery,
    selectedCategory,
    sortBy,
    sortOrder,
    isLoading,
    error,
    openEditModal,
    deleteProduct,
    duplicateProduct,
    toggleProductStock,
    getProductsStats
  } = useAdminProductsStore()

  const filteredProducts = getFilteredProducts()
  const stats = getProductsStats()

  const handleEdit = (product) => {
    openEditModal(product)
  }

  const handleDelete = async (productId) => {
    if (window.confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –ø—Ä–æ–¥—É–∫—Ç?')) {
      const result = await deleteProduct(productId)
      if (!result.success) {
        alert(`–ü–æ–º–∏–ª–∫–∞: ${result.error}`)
      }
    }
  }

  const handleDuplicate = async (productId) => {
    const result = await duplicateProduct(productId)
    if (!result.success) {
      alert(`–ü–æ–º–∏–ª–∫–∞: ${result.error}`)
    }
  }

  const handleToggleStock = (productId) => {
    toggleProductStock(productId)
  }

  if (isLoading) {
    return (
      <div className="products-loading">
        <div className="loading-spinner"></div>
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç—ñ–≤...</p>
      </div>
    )
  }

  return (
    <div className="products-list">
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="products-stats">
        <div className="stats-grid">
          <div className="stat-item">
            <span className="stat-number">{stats.total}</span>
            <span className="stat-label">–í—Å—å–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">{stats.inStock}</span>
            <span className="stat-label">–í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">{stats.outOfStock}</span>
            <span className="stat-label">–ù–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">{stats.priceRange.min} - {stats.priceRange.max}</span>
            <span className="stat-label">–î—ñ–∞–ø–∞–∑–æ–Ω —Ü—ñ–Ω (–≥—Ä–Ω/–º¬≤)</span>
          </div>
        </div>
      </div>

      {/* –§—ñ–ª—å—Ç—Ä–∏ */}
      <ProductsFilter />

      {/* –ü–æ–º–∏–ª–∫–∏ */}
      {error && (
        <div className="products-error">
          <p>‚ùå {error}</p>
        </div>
      )}

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É */}
      <div className="products-results">
        <div className="results-header">
          <h3>
            –ó–Ω–∞–π–¥–µ–Ω–æ {filteredProducts.length}
            {filteredProducts.length === 1 ? ' –ø—Ä–æ–¥—É–∫—Ç' :
             filteredProducts.length < 5 ? ' –ø—Ä–æ–¥—É–∫—Ç–∏' : ' –ø—Ä–æ–¥—É–∫—Ç—ñ–≤'}
            {searchQuery && (
              <span className="search-query"> –∑–∞ –∑–∞–ø–∏—Ç–æ–º "{searchQuery}"</span>
            )}
            {selectedCategory !== 'all' && (
              <span className="category-filter"> –≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó "{selectedCategory}"</span>
            )}
          </h3>

          <div className="sort-info">
            –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è: {sortBy === 'name' ? '–∑–∞ –Ω–∞–∑–≤–æ—é' :
                       sortBy === 'price' ? '–∑–∞ —Ü—ñ–Ω–æ—é' :
                       sortBy === 'dimensions' ? '–∑–∞ —Ä–æ–∑–º—ñ—Ä–æ–º' :
                       sortBy === 'inStock' ? '–∑–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—é' : '–∑–∞ ID'}
            ({sortOrder === 'asc' ? '–∑—Ä–æ—Å—Ç–∞–Ω–Ω—è' : '—Å–ø–∞–¥–∞–Ω–Ω—è'})
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ */}
        {filteredProducts.length === 0 ? (
          <div className="no-products">
            <div className="no-products-icon">üì¶</div>
            <h3>–ü—Ä–æ–¥—É–∫—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ</h3>
            <p>
              {searchQuery || selectedCategory !== 'all'
                ? '–°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—ó –ø–æ—à—É–∫—É –∞–±–æ —Ñ—ñ–ª—å—Ç—Ä–∏'
                : '–©–µ –Ω–µ–º–∞—î –∂–æ–¥–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—É'
              }
            </p>
            <button
              onClick={() => openEditModal()}
              className="btn btn-primary"
            >
              ‚ûï –î–æ–¥–∞—Ç–∏ –ø–µ—Ä—à–∏–π –ø—Ä–æ–¥—É–∫—Ç
            </button>
          </div>
        ) : (
          <div className="products-grid">
            {filteredProducts.map(product => (
              <ProductCard
                key={product.id}
                product={product}
                onEdit={handleEdit}
                onDelete={handleDelete}
                onDuplicate={handleDuplicate}
                onToggleStock={handleToggleStock}
              />
            ))}
          </div>
        )}
      </div>
    </div>
  )
}

export default ProductsList