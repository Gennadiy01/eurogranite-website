import React from 'react'
import useAdminProductsStore from '../../../stores/adminProductsStore'

const ProductsFilter = () => {
  const {
    searchQuery,
    selectedCategory,
    sortBy,
    sortOrder,
    setSearchQuery,
    setSelectedCategory,
    setSortBy,
    openEditModal,
    exportProducts,
    resetProducts,
    clearError
  } = useAdminProductsStore()

  const categories = [
    { value: 'all', label: '–í—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó', count: null },
    { value: 'gabbro', label: '–ì–∞–±—Ä–æ (—á–æ—Ä–Ω–∏–π)', count: null },
    { value: 'granite', label: '–ì—Ä–∞–Ω—ñ—Ç (—Å—ñ—Ä–∏–π/–∫–æ—Ä–∏—á–Ω–µ–≤–∏–π)', count: null },
    { value: 'green', label: '–ó–µ–ª–µ–Ω–∏–π –≥—Ä–∞–Ω—ñ—Ç', count: null },
    { value: 'labradorite', label: '–õ–∞–±—Ä–∞–¥–æ—Ä–∏—Ç', count: null }
  ]

  const sortOptions = [
    { value: 'name', label: '–ó–∞ –Ω–∞–∑–≤–æ—é' },
    { value: 'price', label: '–ó–∞ —Ü—ñ–Ω–æ—é' },
    { value: 'dimensions', label: '–ó–∞ —Ä–æ–∑–º—ñ—Ä–æ–º' },
    { value: 'inStock', label: '–ó–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—é' }
  ]

  const handleSearchChange = (e) => {
    setSearchQuery(e.target.value)
    clearError()
  }

  const handleCategoryChange = (e) => {
    setSelectedCategory(e.target.value)
    clearError()
  }

  const handleSortChange = (e) => {
    setSortBy(e.target.value)
  }

  const clearSearch = () => {
    setSearchQuery('')
    setSelectedCategory('all')
    clearError()
  }

  return (
    <div className="products-filter">
      <div className="filter-section">
        <div className="filter-row">
          {/* –ü–æ—à—É–∫ */}
          <div className="search-group">
            <div className="search-input-wrapper">
              <input
                type="text"
                placeholder="–ü–æ—à—É–∫ –ø–æ –Ω–∞–∑–≤—ñ, ID –∞–±–æ —Ç–µ–∫—Å—Ç—É—Ä—ñ..."
                value={searchQuery}
                onChange={handleSearchChange}
                className="search-input"
              />
              {searchQuery && (
                <button
                  onClick={() => setSearchQuery('')}
                  className="clear-search-btn"
                  title="–û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ—à—É–∫"
                >
                  ‚úï
                </button>
              )}
            </div>
          </div>

          {/* –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó */}
          <div className="filter-group">
            <select
              value={selectedCategory}
              onChange={handleCategoryChange}
              className="filter-select"
            >
              {categories.map(category => (
                <option key={category.value} value={category.value}>
                  {category.label}
                </option>
              ))}
            </select>
          </div>

          {/* –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è */}
          <div className="filter-group">
            <select
              value={sortBy}
              onChange={handleSortChange}
              className="filter-select"
            >
              {sortOptions.map(option => (
                <option key={option.value} value={option.value}>
                  {option.label}
                </option>
              ))}
            </select>
            <button
              onClick={() => setSortBy(sortBy)}
              className={`sort-order-btn ${sortOrder === 'desc' ? 'desc' : 'asc'}`}
              title={`–°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è: ${sortOrder === 'asc' ? '–∑—Ä–æ—Å—Ç–∞–Ω–Ω—è' : '—Å–ø–∞–¥–∞–Ω–Ω—è'}`}
            >
              {sortOrder === 'asc' ? '‚Üë' : '‚Üì'}
            </button>
          </div>
        </div>

        {/* –®–≤–∏–¥–∫—ñ –¥—ñ—ó */}
        <div className="filter-actions">
          <div className="action-group">
            <button
              onClick={() => openEditModal()}
              className="btn btn-primary"
            >
              ‚ûï –î–æ–¥–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç
            </button>

            <button
              onClick={exportProducts}
              className="btn btn-secondary"
              title="–ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –≤—Å—ñ –ø—Ä–æ–¥—É–∫—Ç–∏ –≤ JSON"
            >
              üì§ –ï–∫—Å–ø–æ—Ä—Ç
            </button>

            <button
              onClick={resetProducts}
              className="btn btn-outline"
              title="–°–∫–∏–Ω—É—Ç–∏ –≤—Å—ñ –∑–º—ñ–Ω–∏ –¥–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞–Ω—É"
            >
              üîÑ –°–∫–∏–Ω—É—Ç–∏ –∑–º—ñ–Ω–∏
            </button>
          </div>

          {/* –û—á–∏—Å—Ç–∫–∞ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ */}
          {(searchQuery || selectedCategory !== 'all') && (
            <button
              onClick={clearSearch}
              className="btn btn-ghost"
              title="–û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å—ñ —Ñ—ñ–ª—å—Ç—Ä–∏"
            >
              üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏
            </button>
          )}
        </div>
      </div>

      {/* –ê–∫—Ç–∏–≤–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏ */}
      {(searchQuery || selectedCategory !== 'all') && (
        <div className="active-filters">
          <span className="active-filters-label">–ê–∫—Ç–∏–≤–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏:</span>

          {searchQuery && (
            <span className="filter-tag">
              –ü–æ—à—É–∫: "{searchQuery}"
              <button onClick={() => setSearchQuery('')}>‚úï</button>
            </span>
          )}

          {selectedCategory !== 'all' && (
            <span className="filter-tag">
              –ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {categories.find(c => c.value === selectedCategory)?.label}
              <button onClick={() => setSelectedCategory('all')}>‚úï</button>
            </span>
          )}
        </div>
      )}
    </div>
  )
}

export default ProductsFilter