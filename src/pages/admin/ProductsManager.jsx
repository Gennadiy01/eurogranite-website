/**
 * ProductsManager Component
 *
 * Main page for managing granite products
 */

import React, { useEffect } from 'react';
import { useProductsStore } from '../../stores/useProductsStore';
import styles from '../../components/admin/products/ProductsManager.module.scss';

const ProductsManager = () => {
  const { products, loading, error, fetchProducts, deleteProduct } = useProductsStore();

  // Fetch products on mount
  useEffect(() => {
    fetchProducts();
  }, [fetchProducts]);

  const handleDelete = async (productId, productName) => {
    // Simple confirmation (will be replaced with modal in future)
    if (window.confirm(`–í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç "${productName}"?`)) {
      try {
        await deleteProduct(productId);
        alert('–ü—Ä–æ–¥—É–∫—Ç —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ');
      } catch (error) {
        alert('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ' + error.message);
      }
    }
  };

  const handleEdit = (productId) => {
    // TODO: Navigate to edit page (Phase 1 - Week 2)
    console.log('Edit product:', productId);
    alert('–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –±—É–¥–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –≤ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –µ—Ç–∞–ø—ñ');
  };

  const handleAdd = () => {
    // TODO: Navigate to create page (Phase 1 - Week 2)
    console.log('Add new product');
    alert('–î–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç—É –±—É–¥–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –≤ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –µ—Ç–∞–ø—ñ');
  };

  // Loading state
  if (loading && products.length === 0) {
    return (
      <div className={styles.productsManager}>
        <div className={styles.loadingContainer}>
          <div className={styles.spinner}></div>
          <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç—ñ–≤...</p>
        </div>
      </div>
    );
  }

  // Error state
  if (error && products.length === 0) {
    return (
      <div className={styles.productsManager}>
        <div className={styles.errorContainer}>
          <p>‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</p>
          <p className={styles.errorMessage}>{error}</p>
          <button onClick={() => fetchProducts()} className={styles.retryButton}>
            –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
          </button>
          <p style={{ marginTop: '1rem', fontSize: '0.875rem', color: '#64748b' }}>
            –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å —â–æ backend –∑–∞–ø—É—â–µ–Ω–æ: <code>cd project_eurogranite_admin && npm run dev</code>
          </p>
        </div>
      </div>
    );
  }

  // Empty state
  if (products.length === 0) {
    return (
      <div className={styles.productsManager}>
        <div className={styles.header}>
          <h1 className={styles.title}>–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ü—Ä–æ–¥—É–∫—Ç–∞–º–∏</h1>
          <button onClick={handleAdd} className={styles.addButton}>
            + –î–æ–¥–∞—Ç–∏ –ü—Ä–æ–¥—É–∫—Ç
          </button>
        </div>
        <div className={styles.emptyContainer}>
          <p>–ü—Ä–æ–¥—É–∫—Ç—ñ–≤ –ø–æ–∫–∏ –Ω–µ–º–∞—î</p>
          <button onClick={handleAdd} className={styles.retryButton}>
            –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–µ—Ä—à–∏–π –ø—Ä–æ–¥—É–∫—Ç
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className={styles.productsManager}>
      {/* Header */}
      <div className={styles.header}>
        <h1 className={styles.title}>–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ü—Ä–æ–¥—É–∫—Ç–∞–º–∏</h1>
        <button onClick={handleAdd} className={styles.addButton}>
          + –î–æ–¥–∞—Ç–∏ –ü—Ä–æ–¥—É–∫—Ç
        </button>
      </div>

      {/* Products Table */}
      <div className={styles.tableContainer}>
        <table className={styles.table}>
          <thead className={styles.tableHeader}>
            <tr>
              <th>ID</th>
              <th>–ù–∞–∑–≤–∞</th>
              <th>–¢–µ–∫—Å—Ç—É—Ä–∞</th>
              <th>–†–æ–∑–º—ñ—Ä</th>
              <th>–¶—ñ–Ω–∞ (UA)</th>
              <th>–ù–∞—è–≤–Ω—ñ—Å—Ç—å</th>
              <th>–î—ñ—ó</th>
            </tr>
          </thead>
          <tbody className={styles.tableBody}>
            {products.map((product) => (
              <tr key={product.id}>
                <td>
                  <span className={styles.productId} title={product.id}>
                    {product.id}
                  </span>
                </td>
                <td>
                  <span className={styles.productName}>
                    {product.name?.ua || product.name?.en || 'N/A'}
                  </span>
                </td>
                <td>{product.textureId || 'N/A'}</td>
                <td>{product.size || 'N/A'}</td>
                <td>
                  <span className={styles.productPrice}>
                    {product.price?.ua || 'N/A'}
                  </span>
                </td>
                <td>
                  <span
                    className={`${styles.productStock} ${
                      product.inStock ? styles.inStock : styles.outOfStock
                    }`}
                  >
                    {product.inStock ? '‚úì –í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ' : '‚úó –ù–µ–º–∞—î'}
                  </span>
                </td>
                <td>
                  <div className={styles.actions}>
                    <button
                      onClick={() => handleEdit(product.id)}
                      className={`${styles.actionButton} ${styles.edit}`}
                      title="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏"
                    >
                      ‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
                    </button>
                    <button
                      onClick={() => handleDelete(product.id, product.name?.ua)}
                      className={`${styles.actionButton} ${styles.delete}`}
                      title="–í–∏–¥–∞–ª–∏—Ç–∏"
                    >
                      üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏
                    </button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* Footer Info */}
      <div style={{ marginTop: '1rem', color: '#64748b', fontSize: '0.875rem' }}>
        –í—Å—å–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤: {products.length}
      </div>
    </div>
  );
};

export default ProductsManager;
